<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//switch to 3D mode
d3d_start();
//switch perspective on
d3d_set_perspective(true);
//remove hidden surfaces
d3d_set_hidden(true);
//switch lighting off
d3d_set_lighting(false);
//set draw colour
draw_set_color(c_white);
//we're not using fog but if i don't have this line here it goes Wrong
d3d_set_fog(false, c_black, 1, 2048);
//set culling to false
d3d_set_culling(false);
//switch shading off
d3d_set_shading(false)
//switch interpolation off; GameMaker's interpolation is really bad and I like jaggies
texture_set_interpolation(false)

//get the screen width and height. I did this here because getting it every frame gives me the willies
global._WIDTH = display_get_width();
global._HEIGHT = display_get_height();

//global timer
global._steps = 0;

//create instances
instance_create(0,0,cameraObject);
instance_create(0,0,worldObject);
instance_create(0,0,characterObject);

//these are all npcs, i just changed the sprite and the scale to draw the sprite at
_hey = instance_create(320,random_range(-160,0),npcObject);
_hey.z = 64;
_hey.sprite_index = heyMaxSprite;
_hey.scale = 2;

_feel = instance_create(1280,random_range(160,320),npcObject);
_feel.z = 80;
_feel.sprite_index = feelFreeSprite;
_feel.scale = 2;

_to = instance_create(2560,random_range(480,640),npcObject);
_to.z = 160;
_to.sprite_index = toMakeYourOwnSprite;
_to.scale = 2;

_to = instance_create(3840,random_range(800,960),npcObject);
_to.z = 240;
_to.sprite_index = spritesSprites;
_to.scale = 8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global._steps += 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
