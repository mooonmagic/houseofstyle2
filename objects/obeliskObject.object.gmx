<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>obelisk1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z = 15;
image_speed = 0;
scale = 1;

_emitter = audio_emitter_create();
_emitter2 = audio_emitter_create();
_emitter3 = audio_emitter_create();
_emitter4 = audio_emitter_create();
_emitter5 = audio_emitter_create();
_emitter6 = audio_emitter_create();

audio_falloff_set_model(audio_falloff_exponent_distance);

audio_emitter_falloff(_emitter, 10, 50, 1);
audio_emitter_falloff(_emitter2, 10, 50, 1);
audio_emitter_falloff(_emitter3, 10, 50, 1);
audio_emitter_falloff(_emitter4, 10, 50, 1);
audio_emitter_falloff(_emitter5, 10, 50, 1);
audio_emitter_falloff(_emitter6, 10, 50, 1);
audio_sound_gain(acoustic,0,0);
audio_sound_gain(drums,0,0);
audio_sound_gain(organ,0,0);
audio_sound_gain(surf,0,0);
audio_sound_gain(wail,0,0);

audio_play_sound_on(_emitter,acoustic,true,1);


audio_play_sound_on(_emitter2,bass,true,1);
audio_play_sound_on(_emitter3,drums,true,1);
audio_play_sound_on(_emitter4,organ,true,1);
audio_play_sound_on(_emitter5,surf,true,1);
audio_play_sound_on(_emitter6,wail,true,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// MAKE THIS A SCRIPT KYLE
if global._steps mod 12 == 0 {

    image_index += 1;
}

if keyboard_check_pressed(ord('1')) {

    if audio_sound_get_gain(bass) &gt; 0 {
    
        audio_sound_gain(bass,0,0);
    }
    else {
    
        audio_sound_gain(bass,1,0);
    }
}

if keyboard_check_pressed(ord('3')) {

    if audio_sound_get_gain(drums) &gt; 0 {
    
        audio_sound_gain(drums,0,0);
    }
    else {
    
        audio_sound_gain(drums,1,0);
    }
}

if keyboard_check_pressed(ord('4')) {

    if audio_sound_get_gain(organ) &gt; 0 {
    
        audio_sound_gain(organ,0,0);
    }
    else {
    
        audio_sound_gain(organ,1,0);
    }
}

if keyboard_check_pressed(ord('5')) {

    if audio_sound_get_gain(surf) &gt; 0 {
    
        audio_sound_gain(surf,0,0);
    }
    else {
    
        audio_sound_gain(surf,1,0);
    }
}

if keyboard_check_pressed(ord('6')) {

    if audio_sound_get_gain(wail) &gt; 0 {
    
        audio_sound_gain(wail,0,0);
    }
    else {
    
        audio_sound_gain(wail,1,0);
    }
}

if keyboard_check_pressed(ord('2')) {

    if audio_sound_get_gain(acoustic) &gt; 0 {
    
        audio_sound_gain(acoustic,0,0);
    }
    else {
    
        audio_sound_gain(acoustic,1,0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_emitter_free(_emitter);
audio_emitter_free(_emitter2);
audio_emitter_free(_emitter3);
audio_emitter_free(_emitter4);
audio_emitter_free(_emitter5);
audio_emitter_free(_emitter6);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_transform_set_identity(); // I don't really know what this does but you call it before and after moving or rotating a 3D object
d3d_transform_add_rotation_z(point_direction(x,y,characterObject.x - lengthdir_x(320,cameraObject.direction),characterObject.y - lengthdir_y(320,cameraObject.direction))); // This makes the smiley always face the camera object; the lengthdirs return the x and y components of a point on a circle
// ALSO THIS IS HACKY AS HELL, but I'm going to leave it because there's only one character object so Who Cares
d3d_transform_add_translation(x,y,z); // i changed this to draw the sprite at the actual location of the characterObject
draw_set_alpha_test(true); // tells gamemaker to check for transparency, which is expensive, so we just turn in on here, otherwise the sprite is in a black box
d3d_draw_wall(1,16*scale,16*scale,1,-16*scale,-16*scale,sprite_get_texture(sprite_index,image_index),1,1); // draws the actual sprite, using the current sprite index and image index, which we can change in the step event to animate it
draw_set_alpha_test(false); // turning transparency checks off again
d3d_transform_set_identity(); // done with moving the 3D object
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
